You can load native libraries from anywhere. Look at follow sample:
{{{
String userHome = System.getProperty("user.home");
File librariesDir = new File(userHome, ".jni_cache");

JNIClassLoader jniClassLoader = new JNIClassLoader(TestJNIHelloWorld.class.getClassLoader(), "{0}.dll", librariesDir);
Class<JNIHelloWorld> jniHelloWorld = (Class<JNIHelloWorld>) jniClassLoader.predefineClass(JNIHelloWorldImpl.class.getName());
jniClassLoader.loadLibraries(jniHelloWorld);
jniHelloWorld.newInstance().sayHello("Hello JNI World!");
}}}

Basicaly, you must call System.loadLibrary and library must be in PATH of JVM executable. But code above have no such restrictions. It just load libraries from you point. And it used  naming format to find libraries in this folder. It intercept calls to System.loadLibrary and find correct library from correct folder. The special class loader JNIClassLoader are work here. It look for annotation in JNI implementation class.